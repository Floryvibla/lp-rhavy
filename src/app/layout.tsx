import type { Metadata } from "next";
import localFont from "next/font/local";
import { Open_Sans } from 'next/font/google'
// import "./globals.css";
import Script from 'next/script';

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

const openSans = Open_Sans({
  subsets: ['latin'],
  display: 'swap',
})

export const metadata: Metadata = {
  title: "Rhavynne Alcantara",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="pt-br">
      <head>
        <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css"/>
        <link rel="icon" href="/assets/images/fav-icon.png"/>
        <link rel="stylesheet" href="/assets/bootstrap/bootstrap.min.css"/>
        <link rel="stylesheet" href="/assets/css/owl.carousel.min.css"/>
        <link rel="stylesheet" href="/assets/css/aos.css"/>
        <link rel="stylesheet" href="/assets/css/superclasses.css"/>
        <link rel="stylesheet" href="/assets/css/custom.css"/>
        <link rel="stylesheet" href="/assets/css/mobile.css"/>
      </head>
      <body>
        {children}
        
        <Script src="/assets/js/jquery-3.6.0.min.js" strategy="beforeInteractive" />
        <Script src="/assets/js/popper.min.js" strategy="beforeInteractive" />
        <Script src="/assets/js/bootstrap.min.js" strategy="beforeInteractive" />
        <Script src="/assets/js/owl.carousel.js" strategy="beforeInteractive" />
        <Script src="/assets/js/aos.js" strategy="beforeInteractive" />
        <Script src="/assets/js/jquery.validate.js" strategy="beforeInteractive" />
        <Script src="/assets/js/contact-form.js" strategy="beforeInteractive" />
        
        <Script id="init-scripts" strategy="afterInteractive">
          {`
            $(window).on('load', function(){ 
              // Preloader
              $('.loader').fadeOut();
              $('.loader-mask').delay(350).fadeOut('slow');
            });

            var btn = $('#button');
            
            $(window).scroll(function() {
              if ($(window).scrollTop() > 300) {
                btn.addClass('show');
              } else {
                btn.removeClass('show');
              }
            });
            btn.on('click', function(e) {
              e.preventDefault();
              $('html, body').animate({scrollTop:0}, '300');
            });

            AOS.init();

            $('#owl-carouselone').owlCarousel({
              loop: true,
              margin: 10,
              nav: true,
              autoplay: true,
              autoplayTimeout: 10000,
              autoplayHoverPause: true,
              responsive: {
                0: { items: 1 },
                600: { items: 2 },
                1000: { items: 3 }
              }
            });

            $('#owl-carouseltwo').owlCarousel({
              loop: true,
              margin: 30,
              nav: true,
              autoplay: true,
              autoplayTimeout: 10000,
              autoplayHoverPause: true,
              responsive: {
                0: { items: 1 },
                600: { items: 2 },
                1000: { items: 3 }
              }
            });

            function lightbox_open() {
              var lightBoxVideo = document.getElementById("VisaChipCardVideo");
              document.getElementById('light').style.display = 'block';
              document.getElementById('fade1').style.display = 'block';
              lightBoxVideo.play();
            }

            function lightbox_close() {
              var lightBoxVideo = document.getElementById("VisaChipCardVideo");
              document.getElementById('light').style.display = 'none';
              document.getElementById('fade1').style.display = 'none';
              lightBoxVideo.pause();
            }

            $(document).ready(function () {
              var counters = $(".count");
              var countersQuantity = counters.length;
              var counter = [];

              for (var i = 0; i < countersQuantity; i++) {
                counter[i] = parseInt(counters[i].innerHTML);
              }

              var count = function (start, value, id) {
                var localStart = start;
                setInterval(function () {
                  if (localStart < value) {
                    localStart++;
                    counters[id].innerHTML = localStart;
                  }
                }, 40);
              }

              for (var j = 0; j < countersQuantity; j++) {
                count(0, counter[j], j);
              }

              $('.count').each(function () {
                $(this).prop('Counter', 0).animate({
                  Counter: $(this).text()
                }, {
                  duration: 3300,
                  easing: 'swing',
                  step: function (now) {
                    $(this).text(Math.ceil(now));
                  }
                });
              });
            });
          `}
        </Script>
      </body>
    </html>
  );
}